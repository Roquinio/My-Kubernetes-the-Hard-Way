- hosts:
    - worker
  gather_facts: yes  
  become: yes
  vars:
    worker1:
      - "worker1.pem"
      - "worker1-key.pem"
      - "worker1.kubeconfig"
    worker2:
      - "worker2.pem"
      - "worker2-key.pem"
      - "worker2.kubeconfig"

  tasks: 
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes

    - name: Install OS dependencies
      apt:
        name: "{{ item }}"
        state: latest
      loop:
        - socat 
        - conntrack 
        - ipset

    - name: Create the installation directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0644'
      loop:
        - /etc/cni/net.d
        - /opt/cni/bin
        - /var/lib/kubelet
        - /var/lib/kube-proxy
        - /var/lib/kubernetes
        - /var/run/kubernetes
        - /srv/kube-bin
        - /srv/kube-bin/containerd
        - /etc/containerd/
    
    - name: Download the official Kubernetes release binaries
      get_url:
        url: "{{ item }}"
        dest: /srv/kube-bin
        mode: '0755'
      loop:
      - https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz
      - https://github.com/opencontainers/runc/releases/download/v1.0.0-rc93/runc.amd64
      - https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz
      - https://github.com/containerd/containerd/releases/download/v1.7.0/containerd-1.7.0-linux-amd64.tar.gz
      - https://storage.googleapis.com/kubernetes-release/release/v1.26.0/bin/linux/amd64/kubectl
      - https://storage.googleapis.com/kubernetes-release/release/v1.26.0/bin/linux/amd64/kube-proxy
      - https://storage.googleapis.com/kubernetes-release/release/v1.26.0/bin/linux/amd64/kubelet

    - name: Extract binaries archive
      unarchive:
        src: "/srv/kube-bin/{{ item }}"
        dest: /srv/kube-bin
        remote_src: yes
      loop:
        - crictl-v1.26.0-linux-amd64.tar.gz
        - containerd-1.7.0-linux-amd64.tar.gz

    - name: Moove Containerd binaries
      copy:
        mode: '0755'
        src: "/srv/kube-bin/bin/{{ item }}"
        dest: /bin
        remote_src: yes
      loop:
        - containerd  
        - containerd-shim  
        - containerd-shim-runc-v1  
        - containerd-shim-runc-v2  
        - ctr

    - name: Extract CNI archive
      unarchive:
        src: /srv/kube-bin/cni-plugins-linux-amd64-v0.9.1.tgz
        dest: /opt/cni/bin/
        remote_src: yes

    - name: Rename runc
      copy:
        mode: '0755'
        src: /srv/kube-bin/runc.amd64
        dest: /usr/local/bin/runc
        remote_src: yes

    - name: Moove binaries
      copy:
        src: "/srv/kube-bin/{{ item }}" 
        dest: /usr/local/bin/
        owner: root
        group: root
        mode: '0755'
        remote_src: yes
      loop:
        - crictl 
        - kubectl 
        - kube-proxy 
        - kubelet

    - name: Upload CNI configurations
      copy:
        src: "../etc/{{ item }}"
        dest: /etc/cni/net.d/
        owner: root
        group: root
        mode: '0644'
      loop:
        - 10-bridge.conf
        - 99-loopback.conf


    - name: Upload containerd configuration
      copy:
        src: ../etc/containerd.toml
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: '0644'
    
    - name: Upload containerd service
      template:
        src: ../template/containerd.j2
        dest: /etc/systemd/system/containerd.service
        mode: 0644

    - name: Moove certificate  for worker1
      when: inventory_hostname in groups['worker1']
      copy:
        src: "/srv/cert/{{ item }}"
        dest: /var/lib/kubelet/
        mode: '0644'
        remote_src: yes
      loop:
        - worker1.pem
        - worker1-key.pem

    - name: Moove kubeconfig for worker1
      when: inventory_hostname in groups['worker1']
      copy:
        src: /srv/cert/worker1.kubeconfig
        dest: /var/lib/kubelet/kubeconfig
        remote_src: yes
        mode: '0644'

    - name: Moove certificate  for worker2
      when: inventory_hostname in groups['worker2']
      copy:
        src: "/srv/cert/{{ item }}"
        dest: /var/lib/kubelet/
        mode: '0644'
        remote_src: yes
      loop:
        - worker2.pem
        - worker2-key.pem

    - name: Moove kubeconfig for worker2
      when: inventory_hostname in groups['worker2']
      copy:
        src: /srv/cert/worker2.kubeconfig
        dest: /var/lib/kubelet/kubeconfig
        remote_src: yes
        mode: '0644'
    
    - name: Moove CA
      copy:
        src: /srv/cert/ca.pem
        dest: /var/lib/kubernetes/
        remote_src: yes
        mode: '0644'
    
    - name: Upload kubelet configuration
      template:
        src: ../template/kubelet-config.j2
        dest: /var/lib/kubelet/kubelet-config.yaml
        mode: 0644
        
    - name: Upload kubelet service
      template:
        src: ../template/kubelet-service.j2
        dest: /etc/systemd/system/kubelet.service
        mode: 0644

    - name: Copy kube-proxy kubeconfig
      copy:
        src: /srv/cert/kube-proxy.kubeconfig
        dest: /var/lib/kube-proxy/kubeconfig
        remote_src: yes
        mode: '0644'
    
    - name: Upload kube-proxy configuration
      copy:
        src: ../etc/kube-proxy-config.yaml
        dest: /var/lib/kube-proxy/kube-proxy-config.yaml
        owner: root
        group: root
        mode: '0644'

    - name: Upload kube-proxy service
      template:
        src: ../template/kube-proxy.j2
        dest: /etc/systemd/system/kube-proxy.service
        mode: 0644

    - name: Reload Daemon Systemd
      systemd:
        daemon_reload: true
    
    - name: Start Kubernetes service
      systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: 
        - containerd 
        - kubelet
        - kube-proxy